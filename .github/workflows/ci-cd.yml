name: CI/CD

on:
  push:
    branches:
      - main
    paths:
      - '**.rs'
      - '**/Cargo.toml'
      - '**/Cargo.lock'
  pull_request:
    branches:
      - main
    paths:
      - '**.rs'
      - '**/Cargo.toml'
      - '**/Cargo.lock'
  workflow_dispatch:

jobs:
  lint-and-format:
    name: Lint with clippy and check formatting
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Install Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          components: clippy, rustfmt
          override: true

      - name: Check formatting
        run: cargo fmt -- --check

      - name: Clippy check
        run: cargo clippy -p smithe_backend -p smithe_database -p smithe_lib -p startgg -- -D warnings

  build:
    needs: lint-and-format
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Install Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true

      - name: Install llvm-tools-preview for cargo-llvm-cov
        run: rustup component add llvm-tools-preview

      - name: Install cargo-llvm-cov
        uses: taiki-e/install-action@v1
        with:
          tool: cargo-llvm-cov

      - name: Install trunk
        run: cargo install trunk

      - name: Cache Rust targets
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target/
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-

      - name: Build
        run: cargo build --release --all
        env:
          SERVER_ADDRESS: 'http://127.0.0.1:8080'
          SERVER_ADDRESS_2: ${{ secrets.SERVER_ADDRESS_2 }}

      - name: Run tests and get coverage
        run: |
          cargo llvm-cov clean --workspace
          cargo llvm-cov --no-report --package smithe_lib --no-default-features -- --exact --nocapture --test-threads=1
          cargo llvm-cov report --lcov --output-path ./coverage.lcov
        env:
          PIDGTM_DATABASE_URL: ${{ secrets.PIDGTM_DATABASE_URL }}
          STARTGG_TOKEN: ${{ secrets.STARTGG_TOKEN }}
          STARTGG_TOKEN_1: ${{ secrets.STARTGG_TOKEN_1 }}
          STARTGG_TOKEN_2: ${{ secrets.STARTGG_TOKEN_2 }}
          STARTGG_TOKEN_3: ${{ secrets.STARTGG_TOKEN_3 }}
          STARTGG_TOKEN_4: ${{ secrets.STARTGG_TOKEN_4 }}
          STARTGG_TOKEN_5: ${{ secrets.STARTGG_TOKEN_5 }}
          STARTGG_TOKEN_6: ${{ secrets.STARTGG_TOKEN_6 }}

      - name: Upload Code Coverage Results
        uses: codecov/codecov-action@v3
        with:
          file: ./coverage.lcov
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}

  docker-backend-deploy:
    needs: build
    runs-on: ubuntu-latest
    if: >
      (github.event_name == 'push' && github.ref == 'refs/heads/main') ||
      github.event_name == 'workflow_dispatch'
    steps:
      - uses: actions/checkout@v4

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GHCR_PAT }}

      - name: Build backend Docker image
        run: |
          docker build -t ghcr.io/${{ github.repository_owner }}/smithe-backend:latest -f backend/Dockerfile .

      - name: Push backend Docker image
        run: |
          docker push ghcr.io/${{ github.repository_owner }}/smithe-backend:latest
